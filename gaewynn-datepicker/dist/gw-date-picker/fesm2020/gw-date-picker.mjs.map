{"version":3,"file":"gw-date-picker.mjs","sources":["../../../projects/gw-date-picker/src/lib/gw-date-picker.service.ts","../../../projects/gw-date-picker/src/lib/gw-date-picker.component.ts","../../../projects/gw-date-picker/src/lib/gw-date-picker.component.html","../../../projects/gw-date-picker/src/lib/gw-date-picker.module.ts","../../../projects/gw-date-picker/src/public-api.ts","../../../projects/gw-date-picker/src/gw-date-picker.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GWDatePickerService {\n\n  constructor() { }\n}\n","import { Component, Inject, ContentChild, Input, NgZone, OnDestroy, OnInit, EnvironmentInjector, AfterViewInit } from '@angular/core';\nimport { FormControlDirective } from '@angular/forms';\n\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatDatepicker } from '@angular/material/datepicker';\nimport { Subject, Subscription, take } from 'rxjs';\n\nimport { IGWDatePickerOptions } from './moment-date-formats';\n\n@Component({\n  selector: 'gaewynn-datepicker',\n  templateUrl: './gw-date-picker.component.html'\n})\nexport class GWDatePickerComponent implements OnInit, AfterViewInit, OnDestroy {\n  \n  @ContentChild(MatDatepicker) \n  public datePicker!: MatDatepicker<Date>;\n\n  @ContentChild(FormControlDirective)\n  public formControl!: FormControlDirective;\n\n  @Input()\n  public options!: Subject<IGWDatePickerOptions>;\n\n  private _calendarSubscription!: Subscription;\n  private _dateFormatsSubscription!: Subscription;\n  private _zoneSubscription!: Subscription;\n  private _options!: IGWDatePickerOptions;\n\n  constructor(\n    private readonly _envInjector: EnvironmentInjector,\n    private readonly _zone: NgZone,\n    @Inject(MAT_DATE_LOCALE) private _locale: string,\n    private readonly _dateAdapter: DateAdapter<any>) { }\n  \n  public ngOnInit(): void {\n\n    this._dateFormatsSubscription = this.options.subscribe((newOptions: IGWDatePickerOptions) => {\n\n      this._options = newOptions;\n      this._updateInputDateFormats();\n    });\n  }\n\n  public ngAfterViewInit(): void {\n    \n    //  Handle calendar formats when it opened (allows to preserve independance between date pickers)\n    this._calendarSubscription = this.datePicker.openedStream.subscribe(() => {\n\n      this._locale = this._options.locale;\n      this._dateAdapter.setLocale(this._options.locale);\n\n      var records = (this._envInjector as any).records as Map<any, any>;\n      records.get(MAT_DATE_FORMATS).value.display.dateInput = this._options.momentDateFormats.display.dateInput;\n      records.get(MAT_DATE_FORMATS).value.display.dateA11yLabel = this._options.momentDateFormats.display.dateA11yLabel;\n      records.get(MAT_DATE_FORMATS).value.display.monthYearLabel = this._options.momentDateFormats.display.monthYearLabel;\n      records.get(MAT_DATE_FORMATS).value.display.monthYearA11yLabel = this._options.momentDateFormats.display.monthYearA11yLabel;\n      records.get(MAT_DATE_FORMATS).value.parse.dateInput = this._options.momentDateFormats.parse.dateInput;\n    });\n  }\n\n  public ngOnDestroy(): void {\n\n    this._calendarSubscription.unsubscribe();\n    this._dateFormatsSubscription.unsubscribe();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _updateInputDateFormats(): void {\n    \n    this._zoneSubscription = this._zone.onStable\n      .pipe(take(1))\n      .subscribe(() => {\n        \n        //  Handle input date formats\n        (this.datePicker.datepickerInput as any)._dateFormats = this._options.momentDateFormats;\n\n        //  Refresh the input value to use the new format\n        const currentValue = this.formControl.form.value;\n        this.formControl.form.patchValue(currentValue);\n      });\n  }\n}\n","<ng-content></ng-content>","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { GWDatePickerComponent } from './gw-date-picker.component';\n\n@NgModule({\n  declarations: [\n    GWDatePickerComponent\n  ],\n  imports: [\n    ReactiveFormsModule,\n\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule\n  ],\n  exports: [\n    GWDatePickerComponent\n  ]\n})\nexport class GWDatePickerModule { }\n","/*\n * Public API Surface of gaewynn-date-picker\n */\n\nexport * from './lib/gw-date-picker.service';\nexport * from './lib/gw-date-picker.component';\nexport * from './lib/gw-date-picker.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}